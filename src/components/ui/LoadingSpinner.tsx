import React from 'react';\nimport { motion } from 'framer-motion';\n\ninterface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  variant?: 'default' | 'dots' | 'pulse' | 'wave' | 'particles';\n  color?: string;\n  text?: string;\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\n  size = 'md',\n  variant = 'default',\n  color = 'primary',\n  text\n}) => {\n  const sizes = {\n    sm: 'w-4 h-4',\n    md: 'w-8 h-8',\n    lg: 'w-12 h-12',\n    xl: 'w-16 h-16'\n  };\n\n  const colors = {\n    primary: 'border-primary-500',\n    secondary: 'border-secondary-500',\n    white: 'border-white',\n    blue: 'border-blue-500',\n    purple: 'border-purple-500'\n  };\n\n  if (variant === 'default') {\n    return (\n      <div className=\"flex flex-col items-center space-y-3\">\n        <motion.div\n          className={`${sizes[size]} border-4 ${colors[color as keyof typeof colors]} border-t-transparent rounded-full`}\n          animate={{ rotate: 360 }}\n          transition={{\n            duration: 1,\n            repeat: Infinity,\n            ease: \"linear\"\n          }}\n        />\n        {text && (\n          <motion.p\n            className=\"text-sm text-white/70\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.2 }}\n          >\n            {text}\n          </motion.p>\n        )}\n      </div>\n    );\n  }\n\n  if (variant === 'dots') {\n    return (\n      <div className=\"flex flex-col items-center space-y-3\">\n        <div className=\"flex space-x-2\">\n          {[0, 1, 2].map((i) => (\n            <motion.div\n              key={i}\n              className={`${size === 'sm' ? 'w-2 h-2' : size === 'lg' ? 'w-4 h-4' : 'w-3 h-3'} bg-gradient-to-r from-primary-500 to-secondary-500 rounded-full`}\n              animate={{\n                y: [0, -20, 0],\n                opacity: [0.4, 1, 0.4]\n              }}\n              transition={{\n                duration: 1.2,\n                repeat: Infinity,\n                delay: i * 0.2,\n                ease: \"easeInOut\"\n              }}\n            />\n          ))}\n        </div>\n        {text && (\n          <motion.p\n            className=\"text-sm text-white/70\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.4 }}\n          >\n            {text}\n          </motion.p>\n        )}\n      </div>\n    );\n  }\n\n  if (variant === 'pulse') {\n    return (\n      <div className=\"flex flex-col items-center space-y-3\">\n        <motion.div\n          className={`${sizes[size]} bg-gradient-to-r from-primary-500 to-secondary-500 rounded-full`}\n          animate={{\n            scale: [1, 1.2, 1],\n            opacity: [1, 0.7, 1]\n          }}\n          transition={{\n            duration: 2,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n        />\n        {text && (\n          <motion.p\n            className=\"text-sm text-white/70\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.2 }}\n          >\n            {text}\n          </motion.p>\n        )}\n      </div>\n    );\n  }\n\n  if (variant === 'wave') {\n    return (\n      <div className=\"flex flex-col items-center space-y-3\">\n        <div className=\"flex space-x-1\">\n          {[0, 1, 2, 3, 4].map((i) => (\n            <motion.div\n              key={i}\n              className={`${size === 'sm' ? 'w-1' : size === 'lg' ? 'w-2' : 'w-1.5'} bg-gradient-to-t from-primary-500 to-secondary-500 rounded-full`}\n              animate={{\n                height: [10, 25, 10],\n                opacity: [0.5, 1, 0.5]\n              }}\n              transition={{\n                duration: 1,\n                repeat: Infinity,\n                delay: i * 0.1,\n                ease: \"easeInOut\"\n              }}\n            />\n          ))}\n        </div>\n        {text && (\n          <motion.p\n            className=\"text-sm text-white/70\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.5 }}\n          >\n            {text}\n          </motion.p>\n        )}\n      </div>\n    );\n  }\n\n  if (variant === 'particles') {\n    return (\n      <div className=\"flex flex-col items-center space-y-3\">\n        <div className=\"relative w-16 h-16 flex items-center justify-center\">\n          {[...Array(8)].map((_, i) => (\n            <motion.div\n              key={i}\n              className=\"absolute w-2 h-2 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-full\"\n              style={{\n                left: '50%',\n                top: '50%',\n                transformOrigin: '0 24px'\n              }}\n              animate={{\n                rotate: [0, 360],\n                scale: [1, 0.8, 1],\n                opacity: [1, 0.3, 1]\n              }}\n              transition={{\n                duration: 2,\n                repeat: Infinity,\n                delay: (i * 2) / 8,\n                ease: \"easeInOut\"\n              }}\n              initial={{\n                rotate: (i * 360) / 8\n              }}\n            />\n          ))}\n          \n          {/* Center dot */}\n          <motion.div\n            className=\"w-3 h-3 bg-gradient-to-r from-primary-600 to-secondary-600 rounded-full\"\n            animate={{\n              scale: [1, 1.2, 1],\n              opacity: [0.8, 1, 0.8]\n            }}\n            transition={{\n              duration: 2,\n              repeat: Infinity,\n              ease: \"easeInOut\"\n            }}\n          />\n        </div>\n        \n        {text && (\n          <motion.p\n            className=\"text-sm text-white/70 text-center\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.3 }}\n          >\n            {text}\n          </motion.p>\n        )}\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default LoadingSpinner;